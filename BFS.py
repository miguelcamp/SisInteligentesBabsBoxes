import time
from NodoReinas import NodoReinas
##N Reinas
start = time.time()

best=0
N=20
NodosVisitados=0
##BÃºsq_Amplitud (EstInicial)ðŸ¡ª EncontrÃ©, E_soluciÃ³n, Camino
EstInicial= NodoReinas(N)
Est_solucion=NodoReinas(N)
Camino=[]
##CrearCola () ðŸ¡ª cola
cola=[]
##CrearLista (EstInicial) ðŸ¡ª ListEstGenerados
ListEstGenerados={EstInicial}
##Poner_a_la_Cola (EstInicial, cola)
cola.append(EstInicial)
##Padre (EstInicial) ðŸ¡¨ nulo
EstInicial.padre=None
#EncontrÃ© ðŸ¡¨ No
encontre= False
ReglaAplicable=[]
##Mientras (NO (VacÃ­a (cola))) y No (EncontrÃ©)), hacer
while(len(cola)>0 and not encontre):
    Est_Expl=NodoReinas(N)
    Est_Expl.copy(cola.pop())##Sacar_de_Cola (cola) ðŸ¡ª Est_Expl
    ReglaAplicable=Est_Expl.EncontrarReglasAplicables() ##ReglaAplicable ðŸ¡¨ EncontrarReglaAplicable (Est_Expl)
    ##Mientras (ReglaAplicable no sea Ã˜) y No (EncontrÃ©)), hacer:
    while len(ReglaAplicable)!=0 and not encontre:
        ##SacarRegla (ReglaAplicable) ðŸ¡ª R
        R=ReglaAplicable.pop()
        ##E_Nuevo ðŸ¡¨ Aplicar (R, Est_Expl)
        NodosVisitados+=1
        Est_Nuevo=NodoReinas(N)
        Est_Nuevo.copy(Est_Expl)
        Est_Nuevo.AplicarRegla(R)
        if R[1]>best:
            best=R[1]
            print ("New Best:",Est_Nuevo.posiciones)
        ##Si (No (Buscar (E_Nuevo, ListEstGen)))
        if Est_Nuevo not in ListEstGenerados:
            ##Padre (E_Nuevo) ðŸ¡¨ Est_Expl
            Est_Nuevo.padre=Est_Expl
            ##Si (Cond_Term (E_Nuevo), entonces
            if Est_Nuevo.condTerminacion():
                print("Solucion")
                print(Est_Nuevo.posiciones)
                ##E_soluciÃ³n ðŸ¡¨ E_Nuevo
                Est_solucion.copy(Est_Nuevo)
                ##ConstruirCamino (E_Nuevo) ðŸ¡ª Cam
                ##EncontrÃ© ðŸ¡¨ Si
                encontre=True
            ##C/c  Insertar (E_Nuevo, ListEstGenerados)
            else:
                ListEstGenerados.add(Est_Nuevo)
                ##Poner_a_la_Cola (E_Nuevo, cola)
                cola.append(Est_Nuevo)
##Terminar devolviendo EncontrÃ©, E_soluciÃ³n, Cam

end = time.time()
print("Tiempo:",end - start)
print("Nodos visitados:",NodosVisitados)
Est_solucion.posiciones